# NUMBER BEGGARS
# Your task here is pretty simple: given a list of numbers and a number of beggars, you are supposed to
# return a list with the sum of what each beggar brings home, assuming they all take regular turns,
# from the first to the last.
# For example: [1,2,3,4,5] for 2 beggars will return a result of 9 and 6, as the first one takes [1,3,5],
# the second collects [2,4].
# The same list with 3 beggars would produce a better outcome for the second beggar: 5, 7 and 3, as they will
# respectively take [1, 4], [2, 5] and [3].
# Also note that not all beggars have to take the same amount of "offers", meaning that the length of the list
# is not necessarily a multiple of n; length can be even shorter, in which case the last beggars will of course
# take nothing (0).
# Input
# You will receive 2 lines of input: a single string containing the numbers separated by a comma and a space ", ".
# On the second line you will receive the number of beggars.
# Output
# Print a list of all the sums that each beggar got.

# SOLUTION
# Read the list of numbers from the console.
# Read the beggars count.
# Loop through the numbers and create a list with the numbers.
# Declare a variable for the result multiplied by the count of the beggars.
# Calculate the result for each beggar and print out the result.

str_nums = input().split(", ")
count = int(input())
nums = []

for num in str_nums:
    nums.append(int(num))

result_sum = [0] * count

for i in range(len(nums)):
    index = i % count
    result_sum[index] += nums[i]

print(result_sum)
