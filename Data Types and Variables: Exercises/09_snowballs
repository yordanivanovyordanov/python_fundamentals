# SNOWBALLS
# Tony and Andi love playing in the snow and having snowball fights,
# but they always argue which makes the best snowballs. They have decided to involve you in their fray,
# by making you write a program, which calculates snowball data, and outputs the best snowball value.
# You will receive N – an integer, the number of snowballs being made by Tony and Andi.
# For each snowball you will receive 3 input lines:
# •	On the first line you will get the snowball_snow – an integer.
# •	On the second line you will get the snowball_time – an integer.
# •	On the third line you will get the snowball_quality – an integer.
# For each snowball you must calculate its snowball_value by the following formula:
# (snowball_snow / snowball_time) ^ snowball_quality
# At the end you must print the highest calculated snowball_value.
# Input
# •	On the first input line you will receive N – the number of snowballs.
# •	On the next N * 3 input lines you will be receiving data about snowballs.
# Output
# •	As output you must print the highest calculated snowball_value, by the formula, specified above.
# •	The output format is:
# {snowball_snow} : {snowball_time} = {snowball_value} ({snowball_quality})
# Constraints
# •	The number of snowballs (N) will be an integer in range [0, 100].
# •	The snowball_snow is an integer in range [0, 1000].
# •	The snowball_time is an integer in range [1, 500].
# •	The snowball_quality is an integer in range [0, 100].

# SOLUTION
# Import the math library.
# Read the number of the snowballs from the console.

import math

snowballs = int(input())

# Declare variables for the the best snow, time, quality and value.

best_snow = 0
best_time = 0
best_quality = 0
best_value = 0

# Use a "for" loop to go through all snowballs and read the dats from the console.

for snowball in range(snowballs):
    snow = int(input())
    time = int(input())
    quality = int(input())

# Use the formula provided above to calculate the current snowball value.

    current_value = int(math.pow((snow / time), quality))

# Use conditional to check if the current snowball value is bigger than the best snowball value.
# If they are replace the best value with the current value.

    if current_value > best_value:
        best_value = current_value
        best_snow = snow
        best_time = time
        best_quality = quality

# Print out the result.

print(f'{best_snow} : {best_time} = {best_value} ({best_quality})')
